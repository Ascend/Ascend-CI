name: Test torchtitan

on:
  workflow_dispatch:
    inputs:
      runner:
        required: true
        type: choice
        options:
          - linux-arm64-npu-1
          - linux-arm64-npu-2
          - linux-arm64-npu-4
          - linux-aarch64-310p-1
          - linux-aarch64-310p-2
        default: "linux-arm64-npu-1"
        description: "The runner selected to run on"
    
  pull_request:
    branches:
      - "torchtitan"
    paths:
      - ".github/workflows/torchtitan.yml"
  push:
    branches:
      - "torchtitan"
    paths:
      - ".github/workflows/torchtitan.yml"

# Bash shells do not use ~/.profile or ~/.bashrc so these shells need to be explicitly
# declared as "shell: bash -el {0}" on steps that need to be properly activated.
# It's used to activate ascend-toolkit environment variables.

defaults:
  run:
    shell: bash -el {0}

jobs:
  setup_environment:
    name: run torchtitan tests
    runs-on: ${{ inputs.runner || 'linux-arm64-npu-1' }}
    container: 
      image: ascendai/cann:8.2.rc1-910b-ubuntu22.04-py3.11
      env:
        HF_ENDPOINT: https://hf-mirror.com
    steps:
      - name: Show NPU info
        run: |
          npu-smi info

      - name: Config mirrors
        run: |
          sed -i 's|ports.ubuntu.com|mirrors.tuna.tsinghua.edu.cn|g' /etc/apt/sources.list
          pip config set global.index-url https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple

      - name: Install system dependencies
        run: |
          apt-get update
          apt-get install -y \
              git gcc g++ make cmake ninja-build curl \
              libgl1 libglib2.0-0 libsndfile1

      - name: Config git
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git config --global url."https://gh-proxy.test.osinfra.cn/https://github.com/".insteadOf https://github.com/

      - name: Checkout
        uses: actions/checkout@v4

      - name: Checkout benchmark
        uses: actions/checkout@v4
        with:
          repository: pytorch/torchtitan
          path: torchtitan

      - name: Install torch_npu dependencies
        run: |
          pip install torch torch_npu==2.7.1rc1
          pip install -r https://raw.githubusercontent.com/Ascend/pytorch/refs/heads/master/requirements.txt

      - name: Install project dependencies
        run: |
          pip install pytest pytest-cov tyro tabulate tokenizers transformers datasets

      - name: Show environment info
        id: check_npu
        run: |
          export TORCH_DEVICE_BACKEND_AUTOLOAD=0
          npu_is_available=$(python -c "import torch; print(torch.npu.is_available())")
          npu_count=$(python -c "import torch; print(torch.npu.device_count())")
          echo "npu_count=${npu_count}" >> $GITHUB_OUTPUT
          echo "NPU is available: ${npu_is_available}"
          echo "NPU count: ${npu_count}"
          pip list | grep -E 'torch|numpy'

      - name: Run torchtitan integration_test
        working-directory: torchtitan
        run: |
          python -m tests.integration_tests.run_tests --test_suite features artifacts-to-be-uploaded --ngpu ${{ steps.check_npu.outputs.npu_count }}
  
      - name: Run torchtitan unittest
        working-directory: torchtitan
        run: |
          pytest tests/unit_tests --cov=. --cov-report=xml --durations=20 -vv