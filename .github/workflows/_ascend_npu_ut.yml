name: "_ascend_npu_ut"

on:
  workflow_call:
    inputs:
      runner:
        required: true
        type: string
        description: "The runner selected to run on"
      image:
        required: true
        type: string
        description: "The docker image which will be loaded"
      device:
        required: true
        type: string
        description: "The device selected to run on"
      torch-artifact:
        required: false
        type: string
        description: "The distribution artifact name of torch"
      torch-npu-artifact:
        required: true
        type: string
        description: "The distribution artifact name of torch_npu"

# Bash shells do not use ~/.profile or ~/.bashrc so these shells need to be explicitly
# declared as "shell: bash -el {0}" on steps that need to be properly activated.
# It's used to activate ascend-toolkit environment variables.
defaults:
  run:
    shell: bash -el {0}

jobs:
  test:
    name: test torch_npu
    runs-on: ${{ inputs.runner }}
    container:
      image: ${{ inputs.image }}
    steps:
      - name: Show NPU info
        run: |
          npu-smi info

      - name: Config mirrors
        run: |
          sed -i 's|ports.ubuntu.com|mirrors.tuna.tsinghua.edu.cn|g' /etc/apt/sources.list
          pip config set global.index-url https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple

      - name: Install system dependencies
        run: |
          apt-get update
          apt-get install -y git gcc g++ make cmake ninja-build

      # See: https://github.com/actions/checkout/issues/363#issuecomment-1915075699
      # See: https://github.com/hunshcn/gh-proxy/issues/28#issuecomment-773769630
      - name: Config git
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git config --global url."https://gh-proxy.test.osinfra.cn/https://github.com/".insteadOf https://github.com/

      - name: Checkout
        uses: actions/checkout@v4

      - name: Checkout torch_npu
        uses: actions/checkout@v4
        with:
          repository: Ascend/pytorch
          path: torch_npu

      - name: Install pip dependencies
        working-directory: torch_npu
        run: |
          pip install wheel unittest-xml-reporting tabulate
          pip install -r requirements.txt
          pip install -r test/requirements.txt --no-deps

      # TODO
      # - name: Install torch
      #   id: install-torch
      #   uses: ./.github/actions/install-artifact
      #   with:
      #     artifact: ${{ inputs.torch-artifact }}

      - name: Download torch artifact
        if: ${{ inputs.torch-artifact }}
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.torch-artifact }}

      - name: Install torch
        if: ${{ inputs.torch-artifact }}
        run: |
          pip install ${{ inputs.torch-artifact }}

      - name: Download torch_npu artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.torch-npu-artifact }}
          path: torch_npu

      - name: Install torch_npu
        working-directory: torch_npu
        run: |
          pip install ${{ inputs.torch-npu-artifact }}

      - name: Show environment info
        run: |
          npu_is_available=$(python -c "import torch; print(torch.npu.is_available())")
          npu_count=$(python -c "import torch; print(torch.npu.device_count())")
          echo "NPU is available: ${npu_is_available}"
          echo "NPU count: ${npu_count}"
          pip list | grep -E 'torch|numpy'

      # TODO(shink): Skip
      - name: Do the test
        continue-on-error: true
        run: |
          python torch_npu/ci/access_control_test.py
